<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
    PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
    "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="ks43team04.mapper.AdminMemberMapper">

	<resultMap type="Member" 					id="memberResultMap">
		<id column="m_id" 						property="memberId"/>
		<result column="level_code" 			property="levelCode"/>
		<result column="m_pw" 					property="memberPw"/>
		<result column="m_pw_QnA_code" 			property="memberPwQnACode"/>
		<result column="m_name" 				property="memberName"/>
		<result column="m_birth" 				property="memberBirth"/>
		<result column="m_post_num" 			property="memberPostNumber"/>
		<result column="m_addr" 				property="memberAddr"/>
		<result column="m_detail_addr" 			property="memberDetailAddr"/>
		<result column="m_phone" 				property="memberPhone"/>
		<result column="m_gender" 				property="memberGender"/>
		<result column="m_out_code" 			property="memberOutCode"/>
		<result column="m_email" 				property="memberEmail"/>
		<result column="m_reg_date" 			property="memberRegDate"/>
		<result column="admin_level_code" 		property="adminLevelCode"/>
		<result column="regist_time" 			property="registTime"/>
	</resultMap> 
	
	<resultMap type="Laundry" 							id="laundryResultMap">
		<id column="laundry_code" 						property="laundryCode"/>
		<result column="m_id" 							property="memberId"/>
		<result column="level_code" 					property="levelCode"/>
		<result column="laundry_name" 					property="laundryName"/>
		<result column="laundry_state" 					property="laundryState"/>
		<result column="laundry_post_num" 				property="laundryPostNumber"/>
		<result column="laundry_addr" 					property="laundryAddr"/>
		<result column="laundry_detail_addr" 			property="laundryDetailAddr"/>
		<result column="laundry_tel" 					property="laundryTel"/>
		<result column="laundry_license_img" 			property="laundryLicenseImg"/>
		<result column="laundry_img" 					property="laundryImg"/>
		<result column="skill_licence" 					property="skillLicence"/>
		<result column="business_number" 				property="businessNumber"/>
		<result column="admin_level_code" 				property="adminLevelCode"/>
		<result column="regist_time" 					property="registTime"/>
	</resultMap>
		
		<resultMap type="MemberOut" 				id="memberOutResultMap">
			<id column="m_out_code" 				property="memberOutCode"/>
			<result column="m_id" 					property="memberId"/>
			<result column="m_out_reason" 			property="memberOutReason"/>
			<result column="m_out_request_time" 	property="memberOutRequestTime"/>
			<result column="m_out_okay_time" 		property="memberOutOkayTime"/>
			<result column="m_out_okay_state" 		property="memberOutOkayState"/>
			<result column="m_not_okay_reason" 		property="memberNotOkayReason"/>
			<result column="admin_level_code" 		property="adminLevelCode"/>
			<result column="regist_time" 			property="registTime"/>
			<result column="change_round" 			property="changeRound"/>
			<result column="final_state" 			property="finalState"/>
		</resultMap>
		
		<resultMap type="LoginHistory" 				id="loginHistoryResultMap">
			<id column="m_login_code" 				property="memberLoginCode"/>
			<result column="m_id" 					property="memberId"/>
			<result column="m_login_time" 			property="memberLoginTime"/>
			<result column="m_logout_time" 			property="memberLogoutTime"/>
			<result column="IP_Address" 			property="ipAddress"/>
			<result column="OS" 					property="os"/>
			<result column="browser" 				property="browser"/>
			<result column="admin_level_code" 		property="adminLevelCode"/>
		</resultMap>	
		
		<resultMap type="MemberLevel" 					id="userLevelResultMap">
			<result column="level_code" 				property="levelCode"/>
			<result column="level_name" 				property="levelName"/>
			<result column="admin_level_code"			property="adminLevelCode"/>
			<result column="regist_time" 				property="registTime"/>
			<association property="userLevel" 				javaType="UserLevel">
				<id 	 column="user_level_cal_code" 		property="userLevelCalCode"/>
				<result  column="level_code" 				property="levelCode"/>
				<result  column="range_start" 				property="rangeStart"/>
				<result  column="range_end" 				property="rangeEnd"/>
				<result  column="save_point_percent" 		property="savePointPercent"/>
				<result  column="admin_level_code"			property="adminLevelCode"/>
				<result  column="regist_time"				property="registTime"/>
				<result  column="update_time"				property="updateTime"/>
			</association>
		</resultMap>
		
		<resultMap type="Refund" 					id="refundResultMap">
			<result column="refund_code" 			property="refundCode"/>
			<result column="bill_code" 				property="billCode"/>
			<result column="refund_status" 			property="refundStatus"/>
			<result column="refund_why_code" 		property="refundWhyCode"/>
			<result column="regist_time" 			property="registTime"/>
			<result column="admin_level_code"		property="adminLevelCode"/>
			<association property="refundWhy"		javaType="RefundWhy">
				<id 	 column="refund_why_code" 	property="refundWhyCode"/>
				<result  column="refund_why_cate"	property="refundWhyCate"/>
				<result  column="admin_level_code"	property="adminLevelCode"/>
				<result  column="regist_time"		property="registTime"/>
			</association>
		</resultMap>
		
		<select id="getRefundList" parameterType="String" resultMap="refundResultMap">
			/* 일반세탁소 관리 - 환불 신청 조회 */
			SELECT 
				r.refund_code, 
				r.bill_code, 
				r.refund_status, 
				r.refund_why_code, 
				r.regist_time,
				rw.refund_why_cate
			FROM 
				tb_refund AS r 
			INNER JOIN 
				tb_refund_why AS rw 
			ON
				r.refund_why_code = rw.refund_why_code;
		</select>
		
		<update id="memberOutWaitMemo" parameterType="MemberOut"> 
			/* 탈퇴 사유 등록 */
			UPDATE
				tb_member_out AS m
			SET  
				m.m_not_okay_reason = #{memberNotOkayReason}
			WHERE 
				m.m_id = #{memberId};
		</update>
		
		<delete id="removeUserlevel2" parameterType="String">
			/* 등급관리 삭제 (2) */
			DELETE 
			FROM 
				tb_member_level
			WHERE 
				level_code = #{levelCode};
		</delete>
		
		<delete id="removeUserlevel" parameterType="String">
			/* 등급관리 삭제 (1) */
			DELETE 
			FROM 
				tb_user_level_cal
			WHERE 
				level_code = #{levelCode};
		</delete> 
		
		<insert id="addUserLevel1" parameterType="MemberLevel">
			/* 등급기준 추가  (2)*/			
			INSERT INTO 
				tb_member_level
				(
				level_code, 
				level_name, 
				admin_level_code, 
				regist_time
				)
			VALUES 
				(
				 sf_new_memberLevelCode(),
				 #{levelName},
				 'admin_level_code_004',
				 NOW()
				)
				<selectKey keyProperty="levelCode" resultType="String" order="AFTER">
	        		SELECT
					   u.level_code
					FROM
					   tb_member_level AS u
					ORDER BY u.regist_time desc
					LIMIT 1
	      		</selectKey>
		</insert>		
		
		<insert id="addUserLevel2" parameterType="UserLevel">	
			/* 등급기준 추가  (1)*/		
			INSERT INTO 
		  		tb_user_level_cal
				(
				user_level_cal_code, 
				level_code, 
				range_start, 
				range_end, 
				save_point_percent, 
				admin_level_code, 
				regist_time, 
				update_time
				)
			VALUES 
		 		(
		 		 sf_new_userLevelCode(),
		 		 #{levelCode},
		 		 #{rangeStart},
		 		 #{rangeEnd},
		 		 #{savePointPercent},
		 		 'admin_level_code_004',
		 		  NOW(),
		 		  NOW()
		 		 ); 
		</insert>
		
		<select id="searchDateOutList2" parameterType="String" resultMap="memberOutResultMap">
			/* 가입 날짜별 탈퇴 내역 조회 (대기)*/			
			SELECT
				 m.m_out_code
				,m.m_id
				,m.m_out_reason
				,m.m_out_request_time
				,m.m_out_okay_time
				,m.m_out_okay_state
				,m.m_not_okay_reason
				,m.admin_level_code
				,m.regist_time
				,m.change_round
				,m.final_state
				,mem.m_out_code
			FROM
				tb_member_out AS m
			INNER JOIN 
				tb_member AS mem
			ON
				m.m_id = mem.m_id
		    WHERE
				m.m_out_request_time BETWEEN #{startDate} AND #{endDate}
			AND
				mem.m_out_code = 'X';
		</select>
		
		<select id="allSearchOutList2" parameterType="String" resultMap="memberOutResultMap">
			/* 모든 조건별 탈퇴 내역 조회 (대기)*/
			SELECT
				 m.m_out_code
				,m.m_id
				,m.m_out_reason
				,m.m_out_request_time
				,m.m_out_okay_time
				,m.m_out_okay_state
				,m.m_not_okay_reason
				,m.admin_level_code
				,m.regist_time
				,m.change_round
				,m.final_state
				,mem.m_out_code
			FROM
				tb_member_out AS m
			INNER JOIN 
				tb_member AS mem
			ON
				m.m_id = mem.m_id
			    <trim prefix="WHERE" prefixOverrides="AND | OR ">
					<if test="searchKey != null and searchKey != '' and searchValue != ''">
						AND ${searchKey} LIKE CONCAT('%', #{searchValue}, '%')
					</if>
					<if test="startDate != ''">
						<choose>
							<when test="endDate != ''">
								AND m.m.regist_time BETWEEN #{startDate} AND #{endDate}					
							</when>
							<otherwise>
								AND m.m.regist_time = #{startDate}
							</otherwise>
						</choose>
					</if>
				</trim>
		</select>
		
		<select id="searchDateOutList" parameterType="String" resultMap="memberOutResultMap">
			/* 가입 날짜별 탈퇴 내역 조회*/			
			SELECT
				 m.m_out_code
				,m.m_id
				,m.m_out_reason
				,m.m_out_request_time
				,m.m_out_okay_time
				,m.m_out_okay_state
				,m.m_not_okay_reason
				,m.admin_level_code
				,m.regist_time
				,m.change_round
				,m.final_state
				,mem.m_out_code
			FROM
				tb_member_out AS m
			INNER JOIN 
				tb_member AS mem
			ON
				m.m_id = mem.m_id
		    WHERE
				m.m_out_request_time BETWEEN #{startDate} AND #{endDate}
			AND
				mem.m_out_code = 'O';
		</select>
		
		<select id="allSearchOutList" parameterType="String" resultMap="memberOutResultMap">
			/* 모든 조건별 탈퇴 내역 조회 */
			SELECT
				 m.m_out_code
				,m.m_id
				,m.m_out_reason
				,m.m_out_request_time
				,m.m_out_okay_time
				,m.m_out_okay_state
				,m.m_not_okay_reason
				,m.admin_level_code
				,m.regist_time
				,m.change_round
				,m.final_state
				,mem.m_out_code
			FROM
				tb_member_out AS m
			INNER JOIN 
				tb_member AS mem
			ON
				m.m_id = mem.m_id
			    <trim prefix="WHERE" prefixOverrides="AND | OR ">
					<if test="searchKey != null and searchKey != '' and searchValue != ''">
						AND ${searchKey} LIKE CONCAT('%', #{searchValue}, '%')
					</if>
					<if test="startDate != ''">
						<choose>
							<when test="endDate != ''">
								AND m.m.regist_time BETWEEN #{startDate} AND #{endDate}					
							</when>
							<otherwise>
								AND m.m.regist_time = #{startDate}
							</otherwise>
						</choose>
					</if>
				</trim>
		</select>
		
		<select id="searchDateLoginList" parameterType="String" resultMap="loginHistoryResultMap">
			/* 가입 날짜별 로그인 내역 조회*/
			SELECT 
			     m.m_login_code
				,m.m_id
				,m.m_login_time
				,m.m_logout_time
				,m.IP_Address
				,m.OS
				,m.browser
				,m.admin_level_code
			FROM
				tb_member_login AS m
		    WHERE
				m.m_login_time BETWEEN #{startDate} AND #{endDate};
		</select> 
		
		<select id="allSearchLoginList" parameterType="String" resultMap="loginHistoryResultMap">
			/* 모든 조건별 로그인 내역 조회 */
			SELECT 
				 m.m_login_code
				,m.m_id
				,m.m_login_time
				,m.m_logout_time
				,m.IP_Address
				,m.OS
				,m.browser
				,m.admin_level_code
			FROM
				tb_member_login AS m
			    <trim prefix="WHERE" prefixOverrides="AND | OR ">
					<if test="searchKey != null and searchKey != '' and searchValue != ''">
						AND ${searchKey} LIKE CONCAT('%', #{searchValue}, '%')
					</if>
					<if test="startDate != ''">
						<choose>
							<when test="endDate != ''">
								AND m.m_login_time BETWEEN #{startDate} AND #{endDate}					
							</when>
							<otherwise>
								AND m.m_login_time = #{startDate}
							</otherwise>
						</choose>
					</if>
				</trim>
		</select>
		
		<select id="searchDateLaundryList" parameterType="String" resultMap="laundryResultMap">
			/* 가입 날짜별 세탁소 내역 조회*/
			SELECT 
			     laundry_code 
				,m_id						
				,level_code 				
				,laundry_name					
				,laundry_state 					
				,laundry_post_num 			
				,laundry_addr 					
				,laundry_detail_addr 		
				,laundry_tel			
				,laundry_license_img		
				,laundry_img 				
				,skill_licence 				
				,business_number 				
				,admin_level_code				
				,regist_time
		    FROM
		    	tb_laundry AS l
		    WHERE
				l.regist_time BETWEEN #{startDate} AND #{endDate};
		</select> 
		
		<select id="allSearchLaundryList" parameterType="String" resultMap="laundryResultMap">
			/* 모든 조건별 세탁소 내역 조회 */
			SELECT 
				 laundry_code 
				,m_id						
				,level_code 				
				,laundry_name					
				,laundry_state 					
				,laundry_post_num 			
				,laundry_addr 					
				,laundry_detail_addr 		
				,laundry_tel			
				,laundry_license_img		
				,laundry_img 				
				,skill_licence 				
				,business_number 				
				,admin_level_code				
				,regist_time
		    FROM
		    	tb_laundry AS l
			    <trim prefix="WHERE" prefixOverrides="AND | OR ">
					<if test="searchKey != null and searchKey != '' and searchValue != ''">
						AND ${searchKey} LIKE CONCAT('%', #{searchValue}, '%')
					</if>
					<if test="startDate != ''">
						<choose>
							<when test="endDate != ''">
								AND l.regist_time BETWEEN #{startDate} AND #{endDate}					
							</when>
							<otherwise>
								AND l.regist_time = #{startDate}
							</otherwise>
						</choose>
					</if>
				</trim>
		</select>
		
		<select id="searchDateMemberList" parameterType="String" resultMap="memberResultMap">
			/* 가입 날짜별 회원 내역 조회*/
			SELECT 
			     m_id
				,level_code 
				,m_pw 
				,m_pw_QnA_code 
				,m_name
				,m_birth
				,m_post_num
				,m_addr 
				,m_detail_addr
				,m_phone
				,m_gender 
				,m_out_code 
				,m_email 
				,m_reg_date 
				,admin_level_code 
				,regist_time
		    FROM
		    	tb_member AS m
		    WHERE
				m.m_reg_date BETWEEN #{startDate} AND #{endDate};
		</select> 
		
		<select id="allSearchMemberList" parameterType="String" resultMap="memberResultMap">
			/* 모든 조건별 회원 내역 조회 */
			SELECT 
				 m_id
				,level_code 
				,m_pw 
				,m_pw_QnA_code 
				,m_name
				,m_birth
				,m_post_num
				,m_addr 
				,m_detail_addr
				,m_phone
				,m_gender 
				,m_out_code 
				,m_email 
				,m_reg_date 
				,admin_level_code 
				,regist_time
			FROM
				tb_member
			    <trim prefix="WHERE" prefixOverrides="AND | OR ">
					<if test="searchKey != null and searchKey != '' and searchValue != ''">
						AND ${searchKey} LIKE CONCAT('%', #{searchValue}, '%')
					</if>
					<if test="startDate != ''">
						<choose>
							<when test="endDate != ''">
								AND m.m_reg_date BETWEEN #{startDate} AND #{endDate}					
							</when>
							<otherwise>
								AND m.m_reg_date = #{startDate}
							</otherwise>
						</choose>
					</if>
				</trim>
		</select>
		
		<select id="conditionLaundryList" parameterType="String" resultMap="laundryResultMap">
			/* 조건별 세탁리스트 검색 */
			SELECT
				laundry_code 
				,m_id						
				,level_code 				
				,laundry_name					
				,laundry_state 					
				,laundry_post_num 			
				,laundry_addr 					
				,laundry_detail_addr 		
				,laundry_tel			
				,laundry_license_img		
				,laundry_img 				
				,skill_licence 				
				,business_number 				
				,admin_level_code				
				,regist_time
			FROM 
				tb_laundry
				<trim prefix="WHERE" prefixOverrides="AND | OR ">
					<if test="searchKey != null and searchKey != '' and searchValue != ''">
						AND ${searchKey} LIKE CONCAT('%', #{searchValue}, '%')
					</if>
				</trim> 
		</select>
		
		<select id="conditionMemberList" parameterType="String" resultMap="memberResultMap">
			/* 조건별 회원리스트 검색 */
			SELECT
				 m_id
				,level_code 
				,m_pw 
				,m_pw_QnA_code 
				,m_name
				,m_birth
				,m_post_num
				,m_addr 
				,m_detail_addr
				,m_phone
				,m_gender 
				,m_out_code 
				,m_email 
				,m_reg_date 
				,admin_level_code 
				,regist_time
			FROM
				tb_member
				<trim prefix="WHERE" prefixOverrides="AND | OR ">
					<if test="searchKey != null and searchKey != '' and searchValue != ''">
						AND ${searchKey} LIKE CONCAT('%', #{searchValue}, '%')
					</if>
				</trim> 
		</select>
		
		<select id="searchLevelMemberOutList2" parameterType="String" resultMap="memberOutResultMap">
			/* 권한별 (완료) 탈퇴 조회 검색 */
			SELECT
				 m.m_out_code
				,m.m_id
				,m.m_out_reason
				,m.m_out_request_time
				,m.m_out_okay_time
				,m.m_out_okay_state
				,m.m_not_okay_reason
				,m.admin_level_code
				,m.regist_time
				,m.change_round
				,m.final_state
			FROM
				tb_member_out AS m
			LEFT JOIN 
				tb_member AS mem
			ON
				m.m_id = mem.m_id
			INNER JOIN 
				tb_member_level AS ml
			ON 
				mem.level_code = ml.level_code
			AND
				m.m_out_okay_state = '완료'
			<trim prefix="where" prefixOverrides="and">
				<if test="levelName != null and levelName != ''">
				 	and ml.level_name = #{levelName};
				</if>
				<if test="levelName == ''">
					ml.level_name IN ("WELCOME","SLIVER","GOLD","VIP","VVIP");
				</if>
			</trim>	
		</select>
		
		<select id="searchLevelMemberOutList" parameterType="String" resultMap="memberOutResultMap">
			/* 권한별 (대기) 탈퇴 조회 검색 */
			SELECT
				 m.m_out_code
				,m.m_id
				,m.m_out_reason
				,m.m_out_request_time
				,m.m_out_okay_time
				,m.m_out_okay_state
				,m.m_not_okay_reason
				,m.admin_level_code
				,m.regist_time
				,m.change_round
				,m.final_state
			FROM
				tb_member_out AS m
			LEFT JOIN 
				tb_member AS mem
			ON
				m.m_id = mem.m_id
			INNER JOIN 
				tb_member_level AS ml
			ON 
				mem.level_code = ml.level_code
			AND
				m.m_out_okay_state = '대기'
			<trim prefix="where" prefixOverrides="and">
				<if test="levelName != null and levelName != ''">
				 	and ml.level_name = #{levelName};
				</if>
				<if test="levelName == ''">
					ml.level_name IN ("WELCOME","SLIVER","GOLD","VIP","VVIP");
				</if>
			</trim>	
		</select>
		
		<select id="searchLevelLoginList" parameterType="String" resultMap="loginHistoryResultMap">
			/* 권한별 회원접속내역 조회 검색 */
			SELECT
				m.m_login_code
				,m.m_id
				,m.m_login_time
				,m.m_logout_time
				,m.IP_Address
				,m.OS
				,m.browser
				,m.admin_level_code
			FROM
				tb_member_login AS m
			LEFT JOIN 
				tb_member AS b
			ON 
				m.m_id = b.m_id 
			LEFT JOIN 
				tb_member_level AS ml
			ON 
				b.level_code = ml.level_code	
			WHERE   
				<choose>
					<when test="levelName != null and levelName != ''.toString()">					
						ml.level_name LIKE CONCAT('%', #{levelName},'%');
					</when>
					<otherwise>
						ml.level_name IN ("WELCOME","SLIVER","GOLD","VIP","VVIP");
					</otherwise>
				</choose>			
		</select>
		
		<select id="searchLevelLaundryList" parameterType="String" resultMap="laundryResultMap">
			/* 권한별 세탁소점주 (일반/무인) 조회  검색 */
			SELECT
				l.laundry_code
			    ,l.m_id
			    ,l.level_code
				,l.laundry_name
				,l.laundry_state
				,l.laundry_post_num
				,l.laundry_addr
				,l.laundry_detail_addr 	
				,l.laundry_tel
				,l.laundry_license_img
				,l.laundry_img 
				,l.skill_licence
				,l.business_number
				,l.admin_level_code
				,l.regist_time				
			FROM
			   tb_laundry AS l
			INNER JOIN 
				tb_member_level AS ml
			ON
				ml.level_code = l.level_code
			WHERE
			   ml.level_name = #{levelName};			
		</select>
		
		<select id="searchLevelMemberList" parameterType="String" resultMap="memberResultMap">
			/* 권한별 회원(관리자/회원/일반/무인) 조회 검색 */
			SELECT 
				 m.m_id
				,m.level_code 
				,m.m_pw 
				,m.m_pw_QnA_code 
				,m.m_name
				,m.m_birth
				,m.m_post_num
				,m.m_addr 
				,m.m_detail_addr
				,m.m_phone
				,m.m_gender 
				,m.m_out_code 
				,m.m_email 
				,m.m_reg_date 
				,m.admin_level_code 
				,m.regist_time
			FROM 
					tb_member AS m 
			INNER JOIN 
					tb_member_level AS ml
			ON 		
					m.level_code = ml.level_code
			WHERE   
				<choose>
					<when test="levelName != null and levelName != ''.toString()">					
						ml.level_name LIKE CONCAT('%', #{levelName},'%');
					</when>
					<otherwise>
						ml.level_name IN ("WELCOME","SLIVER","GOLD","VIP","VVIP");
					</otherwise>
				</choose>
		</select>
		
		<delete id="deleteLaundry" parameterType="String">
			/* 전체회원관리  점주(id001 ~id020 제외) 삭제 */
			DELETE 
			FROM l, m
			USING 
				tb_laundry AS l
			left JOIN 
				tb_member AS m
			ON 
				l.m_id = m.m_id
			WHERE 
				l.m_id = #{memberId};
		</delete>
		
		<delete id="deleteMember" parameterType="String">
			/* 전체회원관리  회원(id001 ~id020 제외) 삭제 */
			DELETE
			FROM 
				tb_member
			WHERE 
				m_id = #{memberId};
		</delete>

		<delete id="memberOutRemove" parameterType="String">
			/* 탈퇴회원관리 탈퇴 회원 삭제 */
			DELETE
			FROM 
				tb_member_out 
			WHERE 
				m_id = #{memberId};
		</delete>
		
		<update id="adminReStore" parameterType="Member">
			/* 탈퇴회원관리 탈퇴 회원 복구 */
			UPDATE
				tb_member as m
			SET	
				m.m_out_code = 'X'
			WHERE 
				m.m_id = #{memberId};
		</update>

		<update id="getModifyLevelInfo" parameterType="MemberLevel">
			/* 등급관리 기준수정 수정 */
	         UPDATE  
              		tb_user_level_cal AS ul
	         INNER JOIN 
	               tb_member_level AS ml
	           ON  
	           	   ul.level_code =  ml.level_code
	          SET  
	          	   ml.level_name  = #{levelName},
	               ul.range_start = #{userLevel.rangeStart},
	               ul.range_end = #{userLevel.rangeEnd},
	               ul.save_point_percent = #{userLevel.savePointPercent},
	               ul.update_time = NOW()
	        WHERE  
	        	   ul.level_code = #{levelCode};
		</update>  
		
		<update id="modifyLaundry" parameterType="Laundry">
			/* 세탁소점주 상세보기 수정 */
			UPDATE tb_laundry
			<trim prefix="SET" prefixOverrides=",">
				<if test="laundryName != null and laundryName != ''">	
					,laundry_name = #{laundryName}
				</if>
				<if test="laundryPostNumber != null and laundryPostNumber != ''">	
					,laundry_post_num = #{laundryPostNumber}
				</if>
				<if test="laundryAddr != null and laundryAddr != ''">	
					,laundry_addr = #{laundryAddr}
				</if>	
				<if test="laundryDetailAddr != null and laundryDetailAddr != ''">	
					,laundry_detail_addr = #{laundryDetailAddr}
				</if>
				<if test="laundryTel != null and laundryTel != ''">		
					,laundry_tel = #{laundryTel}
				</if>
				<if test="businessNumber != null and businessNumber != ''">		
					,business_number = #{businessNumber}
				</if>		
				<if test="registTime != null and registTime != ''">		
					,regist_time = #{registTime}
				</if>		
				WHERE 
					laundry_code = #{laundryCode};
			</trim>		
		</update>

		<update id="modifyMember" parameterType="Member">
			/* 회원 상세보기 수정 */
			UPDATE tb_member
			<trim prefix="SET" prefixOverrides=",">
				<if test="levelCode != null and levelCode != ''">	
					,level_code = #{levelCode}
				</if>
				<if test="memberName != null and memberName != ''">	
					,m_name = #{memberName}
				</if>
				<if test="memberBirth != null and memberBirth != ''">		
					,m_birth = #{memberBirth}
				</if>	
				<if test="memberGender != null and memberGender != ''">		
					,m_gender = #{memberGender}
				</if>
				<if test="memberPostNumber != null and memberPostNumber != ''">	
					,m_post_num = #{memberPostNumber}
				</if>
				<if test="memberAddr != null and memberAddr != ''">	
					,m_addr = #{memberAddr}
				</if>	
				<if test="memberDetailAddr != null and memberDetailAddr != ''">	
					,m_detail_addr = #{memberDetailAddr}
				</if>
				<if test="memberPhone != null and memberPhone != ''">		
					,m_phone = #{memberPhone}
				</if>	
				<if test="memberEmail != null and memberEmail != ''">		
					,m_email = #{memberEmail}
				</if>	
				<if test="memberPhone != null and memberPhone != ''">		
					,m_phone = #{memberPhone}
				</if>
				<if test="memberRegDate != null and memberRegDate != ''">		
					,m_reg_date = #{memberRegDate}
				</if>
				<if test="registTime != null and registTime != ''">		
					,regist_time = NOW()
				</if>	
				WHERE 
					m_id = #{memberId};
			</trim>		
		</update>
	
		<select id="getLaundryInfoByCode" parameterType="String" resultMap="laundryResultMap">
			/* 세탁소 점주 상세정보 조회*/
			SELECT
				l.laundry_code
			    ,l.m_id
			    ,l.level_code
				,l.laundry_name
				,l.laundry_state
				,l.laundry_post_num
				,l.laundry_addr
				,l.laundry_detail_addr 	
				,l.laundry_tel
				,l.laundry_license_img
				,l.laundry_img 
				,l.skill_licence
				,l.business_number
				,l.admin_level_code
				,l.regist_time				
			FROM
			   tb_laundry AS l
			WHERE
			   l.laundry_code = #{laundryCode};
		</select>

		<select id="getMemberInfoById" parameterType="String" resultMap="memberResultMap">
			/* 회원 상세정보 조회*/
 			SELECT
			     m.m_id
			    ,m.level_code
				,m.m_pw
				,m.m_pw_QnA_code
				,m.m_name
				,m.m_birth
				,m.m_post_num
				,m.m_addr
				,m.m_detail_addr
				,m.m_phone
				,m.m_gender
				,m.m_out_code
				,m.m_email
				,m.m_reg_date
				,m.admin_level_code
				,m.regist_time 
			FROM
			   tb_member AS m
			WHERE
			   m.m_id = #{memberId};
		</select>
		
		<select id="getLoginHistory" parameterType="String" resultMap="loginHistoryResultMap">
			/* 회원 접속내역 조회 */
			SELECT
				m.m_login_code
				,m.m_id
				,m.m_login_time
				,m.m_logout_time
				,m.IP_Address
				,m.OS
				,m.browser
				,m.admin_level_code
			FROM
				tb_member_login AS m
		</select>

		<select id="getMemberOut" parameterType="String" resultMap="memberOutResultMap">
			/* 탈퇴회원 조회 */
			SELECT
				 m.m_out_code
				,m.m_id
				,m.m_out_reason
				,m.m_out_request_time
				,m.m_out_okay_time
				,m.m_out_okay_state
				,m.m_not_okay_reason
				,m.admin_level_code
				,m.regist_time
				,m.change_round
				,m.final_state
				,mem.m_out_code
			FROM
				tb_member_out AS m
			INNER JOIN 
				tb_member AS mem
			ON
				m.m_id = mem.m_id
			WHERE 
				mem.m_out_code = 'O' 
			AND
				m.m_out_okay_state = '완료';
		</select>
		
		
		<select id="getMemberNotOut" parameterType="String" resultMap="memberOutResultMap">
			/* 탈퇴회원 대기 조회 */
			SELECT
				m.m_out_code
				,m.m_id
				,m.m_out_reason
				,m.m_out_request_time
				,m.m_out_okay_time
				,m.m_out_okay_state
				,m.m_not_okay_reason
				,m.admin_level_code
				,m.regist_time
				,m.change_round
				,m.final_state
				,mem.m_out_code
			FROM
				tb_member_out AS m
			INNER JOIN 
				tb_member AS mem
			ON
				m.m_id = mem.m_id
			WHERE  
				m.m_out_okay_state = '대기';
	
		</select>

		<select id="getUserLevelList" parameterType="String" resultMap="userLevelResultMap">
			/* 회원 등급 기준 및 혜택  조회*/
			SELECT
				ml.level_code,
				ml.level_name,
				ul.range_start,
				ul.range_end,
				ul.save_point_percent,
				ul.regist_time,
				ul.update_time
			FROM
				tb_user_level_cal AS ul
			INNER JOIN
				tb_member_level AS ml
			ON
				ul.level_code = ml.level_code
		</select>
		
		<select id="getLevelInfoByCode" parameterType="String" resultMap="userLevelResultMap">
			/* 회원 등급 기준 및 혜택  수정보기*/
			SELECT
				ml.level_code,
				ml.level_name,
				ul.range_start,
				ul.range_end,
				ul.save_point_percent,
				ul.regist_time,
				ul.update_time
			FROM
				tb_user_level_cal AS ul
			INNER JOIN
				tb_member_level AS ml
			ON
				ul.level_code = ml.level_code
			WHERE
				ml.level_code = #{levelCode};		
		</select>
		

		<select id="getLaundryList" resultMap="laundryResultMap"> 
			/*세탁소 전체회원 조회 */
			SELECT
				laundry_code 
				,m_id						
				,level_code 				
				,laundry_name					
				,laundry_state 					
				,laundry_post_num 			
				,laundry_addr 					
				,laundry_detail_addr 		
				,laundry_tel			
				,laundry_license_img		
				,laundry_img 				
				,skill_licence 				
				,business_number 				
				,admin_level_code				
				,regist_time
			FROM 
				tb_laundry
			ORDER BY 
				regist_time DESC;
		</select>
	
		<select id="getAdminMemberList" resultMap="memberResultMap">
			/*관리자페이지 회원 목록 조회*/
			SELECT 
				 m_id
				,level_code 
				,m_pw 
				,m_pw_QnA_code 
				,m_name
				,m_birth
				,m_post_num
				,m_addr 
				,m_detail_addr
				,m_phone
				,m_gender 
				,m_out_code 
				,m_email 
				,m_reg_date 
				,admin_level_code 
				,regist_time
			FROM 
				tb_member
			ORDER BY 
				regist_time DESC;	
		</select>
		
		<select id="isIdCheck" parameterType="String" resultType="boolean">
			/* 관리자등록 아이디 중복 체크 */
			SELECT
				IF(COUNT(1) = 1, 0, 1)
			FROM 
			   	tb_member AS m
			WHERE 
			   m.m_id = #{memberId};
		</select>
	
		<insert id="addMemberAdmin" parameterType="Member">
 		/* 관리자 등록 회원가입 */
 		INSERT INTO tb_member
			(
			m_id
			,level_code
			,m_pw
			,m_pw_QnA_code
			,m_name
			,m_birth
			,m_post_num
			,m_addr
			,m_detail_addr
			,m_phone
			,m_gender
			,m_out_code
			,m_email
			,m_reg_date
			,admin_level_code
			,regist_time
		)VALUES( 
			#{memberId}
			,#{levelCode}
			,#{memberPw}
			,#{memberPwQnACode}
			,#{memberName}
			,#{memberBirth}
			,#{memberPostNumber}
			,#{memberAddr}
			,#{memberDetailAddr}
			,#{memberPhone}
			,#{memberGender}
			,'X'
			,#{memberEmail}
			,NOW()
			,'admin_level_code_001'
			,NOW() 
		);	
 	</insert>
	
	
</mapper>